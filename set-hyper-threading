#!/bin/sh


set -o nounset  # display error and exit when referencing undefined variables
set -o errexit  # abort script when a command exists with a non-zero status


# Turn hyper-threading off or on

# PARM: 1="0" turn off hyper threading, "1" turn it on.

if [ $# -ne 1 ]; then
    cat << EOF
One argument required:
    0 - turn off hyper-threading
    1 - to turn hyper-threading back on'
EOF
    exit 1
fi

if grep -q '^flags.*[[:space:]]ht[[:space:]]' /proc/cpuinfo; then
    echo "Hyper-threading is supported"
else
    echo "Hyper-threading is not supported"
    echo "Aborting"
    exit 2
fi

physicalCpus=$(grep physical.id /proc/cpuinfo | uniq | wc -l)
physicalCores=$(grep cpu.cores /proc/cpuinfo | uniq | awk '{print $4}')
actualCores=$(( physicalCores * physicalCpus ))
logicalCores=$(grep -c processor /proc/cpuinfo)

cat << EOF
Physical CPUs: $physicalCpus
Number of physical cores in each physical CPUs: $physicalCores
Actual number of physical cores: $actualCores
Number of logical cores: $logicalCores

EOF

if [ "$actualCores" != "$logicalCores" ]; then
    echo "Hyper-threading is enabled!"
    if [ "$1" = 0 ]; then
        echo "Turning it off..."
        for i in $(seq $actualCores $(( logicalCores - 1 ))); do
            echo 0 > "/sys/devices/system/cpu/cpu$i/online"
        done
    else
        exit
    fi
else
    echo "Hyper-threading is not enabled!"
    if [ "$1" -eq 1 ]; then
        echo "Turning it on..."
        for i in $(seq $actualCores $((( 2 * physicalCores ) - 1 ))); do
            echo 1 > "/sys/devices/system/cpu/cpu$i/online"
        done
    else
        exit
    fi
fi

logicalCores=$(grep -c processor /proc/cpuinfo)

cat << EOF
Physical CPUs: $physicalCpus
Number of physical cores in each physical CPUs: $physicalCores
Actual number of physical cores: $actualCores
Number of logical cores: $logicalCores

EOF
